#!/usr/bin/env python
from modules.imports import *
from tools.status import *
import subprocess
main_banner()
while True:
    try:
        pan = input('\33[4mpan<(\33[00m ')
        pan = pan.split()
        
        if pan[0] == 'use':

            if pan[1] == 'listener':
                listener()

            elif pan[1] == 'page_clonner':
                start_clonner()

            elif pan[1] == 'port_checker':
                port_checker()

            elif pan[1] == 'port_scanner':
                port_scanner()

            elif pan[1] == 'whois':
                whois()

            elif pan[1] == 'subdomain_finder':
                subdomains()

            elif pan[1] == 'ddos':
                ddos()

            elif pan[1] == 'hash_cracker':
                decrypt()

            
            else:
                print_warning('No tool named `\33[92m{}\33[00m`'.format(pan[1]))


        elif 'exit' in pan:
            print_status('Exiting.... ')
            time.sleep(1.5)
            break

        elif pan[0] == "hash":
            if len(pan) < 3:
                print_warning("hash could not be generated")
            else:
                encrypt(pan[1], pan[2])


        elif pan[0] == "nmap":
            os.system(" ".join(pan))

        elif pan[0] == "ip":
            ip(pan[1])

        elif pan[0] == "read":
            f_reader(pan[1])

        elif pan[0] in ('restart', 'refresh'):
            print_status('Restarting terminal...')
            time.sleep(3)
            os.system('./panconsole')
            break
        
        elif 'banner' in pan:
            os.system("clear")
            banner()

        elif 'clear' in pan:
            os.system('clear')

        elif 'help' in pan:
            if len(pan) == 1:
                help()
            elif len(pan) == 2:
                helper(pan[1])


        elif 'version' in pan:
            version()
        else:
            print_warning('Unknown command `\33[92m{}\33[00m`'.format(pan[0]))

    except:
        pass
